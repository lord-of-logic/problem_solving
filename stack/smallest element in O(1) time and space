#include<iostream>
#include<stack>

using namespace std;

class _stack
{
stack<int> s;
int minEle;
public :
    int getMin();
    int pop();
    void push(int);
};


/*returns min element from stack*/
int _stack :: getMin()
{
   //Your code here
   if(s.empty())
   return -1;
   return minEle;
}

/*returns poped element from stack*/
int _stack ::pop()
{
   //Your code here
    if(s.empty())
        return -1;
    int pop_ele=0;
   if(s.top()<0)
   {
       pop_ele=minEle;
       minEle=minEle-s.top();
       s.pop();
       return pop_ele;
   }
   pop_ele=s.top();
   s.pop();
   return pop_ele;
}

/*push element x into the stack*/
void _stack::push(int x)
{
   //Your code here
   if(s.empty())
   {
       s.push(x);
       minEle=x;
       return;
   }
   if(minEle>x)
   {
       s.push(x-minEle);
       minEle=x;
       return;
   }
   s.push(x);
}

int main()
{
   int t;
   cin>>t;
   while(t--)
   {
       int q;
       cin>>q;
        _stack *a = new _stack();
       while(q--){
       int qt;
       cin>>qt;
       if(qt==1)
       {
           //push
           int att;
           cin>>att;
           a->push(att);
       }
       else if(qt==2)
       {
           //pop
           cout<<a->pop()<<" ";
       }
       else if(qt==3)
       {
           //getMin
           cout<<a->getMin()<<" ";
       }
       }
       cout<<endl;
   }
}
